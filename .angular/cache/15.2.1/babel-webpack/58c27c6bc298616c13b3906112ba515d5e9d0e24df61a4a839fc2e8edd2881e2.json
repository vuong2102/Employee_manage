{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AccountBackComponent = class AccountBackComponent {\n  constructor(employeeService, router) {\n    this.employeeService = employeeService;\n    this.router = router;\n    this.employees = [];\n    this.responseSubject = new BehaviorSubject(null);\n    this.currentPageSubject = new BehaviorSubject(0);\n    this.currentPage$ = this.currentPageSubject.asObservable();\n  }\n  ngOnInit() {\n    this.employeesState$ = this.employeeService.employees$().pipe(map(response => {\n      this.responseSubject.next(response);\n      this.currentPageSubject.next(response.data.page.number);\n      console.log(response);\n      return {\n        appState: 'APP_LOADED',\n        appData: response\n      };\n    }), startWith({\n      appState: 'APP_LOADING'\n    }), catchError(error => {\n      return of({\n        appState: 'APP_ERROR',\n        error\n      });\n    }));\n  }\n  gotToPage(name, pageNumber = 0) {\n    this.employeesState$ = this.employeeService.employees$(name, pageNumber).pipe(map(response => {\n      this.responseSubject.next(response);\n      this.currentPageSubject.next(pageNumber);\n      console.log(response);\n      return {\n        appState: 'APP_LOADED',\n        appData: response\n      };\n    }), startWith({\n      appState: 'APP_LOADED',\n      appData: this.responseSubject.value\n    }), catchError(error => {\n      return of({\n        appState: 'APP_ERROR',\n        error\n      });\n    }));\n  }\n  goToNextOrPreviousPage(direction, name) {\n    this.gotToPage(name, direction === 'forward' ? this.currentPageSubject.value + 1 : this.currentPageSubject.value - 1);\n  }\n};\nAccountBackComponent = __decorate([Component({\n  selector: 'app-account-back',\n  templateUrl: './account-back.component.html',\n  styleUrls: ['./account-back.component.css']\n})], AccountBackComponent);\nexport { AccountBackComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAG/BC,YAAoBC,eAAgC,EAC1CC,MAAc;IADJ,oBAAe,GAAfD,eAAe;IACzB,WAAM,GAANC,MAAM;IAHhB,cAAS,GAAe,EAAE;IAM1B,oBAAe,GAAG,IAAIC,eAAe,CAAoB,IAAI,CAAC;IACtD,uBAAkB,GAAG,IAAIA,eAAe,CAAS,CAAC,CAAC;IAC3D,iBAAY,GAAG,IAAI,CAACC,kBAAkB,CAACC,YAAY,EAAE;EAL3B;EAO1BC,QAAQ;IACN,IAAI,CAACC,eAAe,GAAG,IAAI,CAACN,eAAe,CAACO,UAAU,EAAE,CAACC,IAAI,CAC3DC,GAAG,CAAEC,QAA2B,IAAI;MAClC,IAAI,CAACC,eAAe,CAACC,IAAI,CAACF,QAAQ,CAAC;MACnC,IAAI,CAACP,kBAAkB,CAACS,IAAI,CAACF,QAAQ,CAACG,IAAI,CAACC,IAAI,CAACC,MAAM,CAAC;MACvDC,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;MACrB,OAAQ;QAAEQ,QAAQ,EAAE,YAAY;QAAEC,OAAO,EAAET;MAAQ,CAAE;IACvD,CAAC,CAAC,EACFU,SAAS,CAAC;MAAEF,QAAQ,EAAE;IAAa,CAAE,CAAC,EACtCG,UAAU,CAAEC,KAAwB,IAAI;MACtC,OAAOC,EAAE,CAAC;QAAEL,QAAQ,EAAE,WAAW;QAAEI;MAAK,CAAE,CAAC;IAAA,CAAC,CAC3C,CACJ;EACH;EAEAE,SAAS,CAACC,IAAa,EAAEC,aAAqB,CAAC;IAC7C,IAAI,CAACpB,eAAe,GAAG,IAAI,CAACN,eAAe,CAACO,UAAU,CAACkB,IAAI,EAAEC,UAAU,CAAC,CAAClB,IAAI,CAC3EC,GAAG,CAAEC,QAA2B,IAAI;MAClC,IAAI,CAACC,eAAe,CAACC,IAAI,CAACF,QAAQ,CAAC;MACnC,IAAI,CAACP,kBAAkB,CAACS,IAAI,CAACc,UAAU,CAAC;MACxCV,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;MACrB,OAAQ;QAAEQ,QAAQ,EAAE,YAAY;QAAEC,OAAO,EAAET;MAAQ,CAAE;IACvD,CAAC,CAAC,EACFU,SAAS,CAAC;MAAEF,QAAQ,EAAE,YAAY;MAAEC,OAAO,EAAE,IAAI,CAACR,eAAe,CAACgB;IAAK,CAAE,CAAC,EAC1EN,UAAU,CAAEC,KAAwB,IAAI;MACtC,OAAOC,EAAE,CAAC;QAAEL,QAAQ,EAAE,WAAW;QAAEI;MAAK,CAAE,CAAC;IAAA,CAAC,CAC3C,CACJ;EACH;EAEAM,sBAAsB,CAACC,SAAkB,EAAEJ,IAAa;IACtD,IAAI,CAACD,SAAS,CAACC,IAAI,EAAEI,SAAS,KAAK,SAAS,GAAG,IAAI,CAAC1B,kBAAkB,CAACwB,KAAK,GAAG,CAAC,GAAG,IAAI,CAACxB,kBAAkB,CAACwB,KAAK,GAAG,CAAC,CAAC;EACvH;CACD;AA5CY7B,oBAAoB,eALhCD,SAAS,CAAC;EACTiC,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,GACWlC,oBAAoB,CA4ChC;SA5CYA,oBAAoB","names":["Component","AccountBackComponent","constructor","employeeService","router","BehaviorSubject","currentPageSubject","asObservable","ngOnInit","employeesState$","employees$","pipe","map","response","responseSubject","next","data","page","number","console","log","appState","appData","startWith","catchError","error","of","gotToPage","name","pageNumber","value","goToNextOrPreviousPage","direction","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Code\\Projects\\EmployeeManager\\Employee_Manager_Angular\\src\\app\\account-back\\account-back.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-account-back',\n  templateUrl: './account-back.component.html',\n  styleUrls: ['./account-back.component.css']\n})\nexport class AccountBackComponent {\n  employees: Employee[] = [];\n\n  constructor(private employeeService: EmployeeService,\n    private router: Router){}\n\n  employeesState$: Observable<{ appState: string, appData?: ApiResponse<Page>, error?: HttpErrorResponse }>;\n  responseSubject = new BehaviorSubject<ApiResponse<Page>>(null);\n  private currentPageSubject = new BehaviorSubject<number>(0);\n  currentPage$ = this.currentPageSubject.asObservable();\n\n  ngOnInit(): void {\n    this.employeesState$ = this.employeeService.employees$().pipe(\n      map((response: ApiResponse<Page>) => {\n        this.responseSubject.next(response);\n        this.currentPageSubject.next(response.data.page.number);\n        console.log(response);\n        return ({ appState: 'APP_LOADED', appData: response });\n      }),\n      startWith({ appState: 'APP_LOADING' }),\n      catchError((error: HttpErrorResponse) =>{\n        return of({ appState: 'APP_ERROR', error })}\n        )\n    )\n  }\n\n  gotToPage(name?: string, pageNumber: number = 0): void {\n    this.employeesState$ = this.employeeService.employees$(name, pageNumber).pipe(\n      map((response: ApiResponse<Page>) => {\n        this.responseSubject.next(response);\n        this.currentPageSubject.next(pageNumber);\n        console.log(response);\n        return ({ appState: 'APP_LOADED', appData: response });\n      }),\n      startWith({ appState: 'APP_LOADED', appData: this.responseSubject.value }),\n      catchError((error: HttpErrorResponse) =>{\n        return of({ appState: 'APP_ERROR', error })}\n        )\n    )\n  }\n\n  goToNextOrPreviousPage(direction?: string, name?: string): void {\n    this.gotToPage(name, direction === 'forward' ? this.currentPageSubject.value + 1 : this.currentPageSubject.value - 1);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}