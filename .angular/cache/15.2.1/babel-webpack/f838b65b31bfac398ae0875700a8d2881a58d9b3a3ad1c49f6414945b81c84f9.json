{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { BehaviorSubject, map, of, startWith } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nlet EmployeeListComponent = class EmployeeListComponent {\n  constructor(employeeService, router) {\n    this.employeeService = employeeService;\n    this.router = router;\n    this.employees = [];\n    this.page = {};\n    this.apiResponse = {};\n    this.responseSubject = new BehaviorSubject(null);\n  }\n  ngOnInit() {\n    // this.getEmployees();\n    this.employeesState$ = this.employeeService.employees$().pipe(map(response => {\n      //giữ 1 copy response\n      this.responseSubject.next(response);\n      console.log(response);\n      return {\n        appState: 'APP_LOAD',\n        appData: response\n      };\n    }), startWith({\n      appState: 'APP_LOADING'\n    }), catchError(error => of({\n      appState: 'APP_ERROR',\n      error\n    })));\n  }\n  gotToPage(name, pageNumber) {\n    this.employeesState$ = this.employeeService.employees$(pageNumber).pipe(map(response => {\n      this.responseSubject.next(response);\n      console.log(response);\n      return {\n        appState: 'APP_LOADED',\n        appData: response\n      };\n    }), startWith({\n      appState: 'APP_LOADED',\n      appData: this.responseSubject.value\n    }), catchError(error => of({\n      appState: 'APP_ERROR',\n      error\n    })));\n  }\n  // private getEmployees(){\n  //   this.employeeService.getEmployeesList(0,10).subscribe((data) => {\n  //     console.log(data);\n  //     this.apiResponse = data;\n  //   });\n  // }\n  updateEmployee(id) {\n    this.router.navigate(['update-employee', id]);\n  }\n  detailEmployee(id) {\n    this.router.navigate(['detail-employee', id]);\n  }\n  deleteEmployee(id) {\n    this.employeeService.deleteEmployee(id).subscribe(data => {\n      console.log(data);\n      // this.getEmployees();\n    });\n  }\n};\n\nEmployeeListComponent = __decorate([Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})], EmployeeListComponent);\nexport { EmployeeListComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAA2B,eAAe;AAM5D,SAASC,eAAe,EAAcC,GAAG,EAAEC,EAAE,EAAEC,SAAS,QAAQ,MAAM;AAEtE,SAASC,UAAU,QAAQ,gBAAgB;AAQpC,IAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAMhCC,YAAoBC,eAAgC,EAC1CC,MAAc;IADJ,oBAAe,GAAfD,eAAe;IACzB,WAAM,GAANC,MAAM;IANhB,cAAS,GAAe,EAAE;IAC1B,SAAI,GAAS,EAAU;IACvB,gBAAW,GAAsB,EAAuB;IACxD,oBAAe,GAAG,IAAIR,eAAe,CAAoB,IAAI,CAAC;EAGpC;EAI1BS,QAAQ;IACN;IACA,IAAI,CAACC,eAAe,GAAG,IAAI,CAACH,eAAe,CAACI,UAAU,EAAE,CAACC,IAAI,CAC3DX,GAAG,CAAEY,QAA2B,IAAI;MAElC;MACA,IAAI,CAACC,eAAe,CAACC,IAAI,CAACF,QAAQ,CAAC;MACnCG,OAAO,CAACC,GAAG,CAAEJ,QAAQ,CAAE;MACvB,OAAQ;QAAEK,QAAQ,EAAE,UAAU;QAAEC,OAAO,EAAEN;MAAQ,CAAE;IACrD,CAAC,CACA,EACDV,SAAS,CAAC;MAACe,QAAQ,EAAE;IAAa,CAAC,CAAC,EACpCd,UAAU,CAAEgB,KAAwB,IAAKlB,EAAE,CAAC;MAACgB,QAAQ,EAAE,WAAW;MAAEE;IAAK,CAAC,CAAC,CAAC,CAC7E;EACH;EACAC,SAAS,CAACC,IAAa,EAAEC,UAAmB;IAC1C,IAAI,CAACb,eAAe,GAAG,IAAI,CAACH,eAAe,CAACI,UAAU,CAACY,UAAU,CAAC,CAACX,IAAI,CACrEX,GAAG,CAAEY,QAA2B,IAAI;MAClC,IAAI,CAACC,eAAe,CAACC,IAAI,CAACF,QAAQ,CAAC;MACnCG,OAAO,CAACC,GAAG,CAAEJ,QAAQ,CAAE;MACvB,OAAQ;QAAEK,QAAQ,EAAE,YAAY;QAAEC,OAAO,EAAEN;MAAQ,CAAE;IACvD,CAAC,CACA,EACDV,SAAS,CAAC;MAACe,QAAQ,EAAE,YAAY;MAAEC,OAAO,EAAE,IAAI,CAACL,eAAe,CAACU;IAAK,CAAC,CAAC,EACxEpB,UAAU,CAAEgB,KAAwB,IAAKlB,EAAE,CAAC;MAACgB,QAAQ,EAAE,WAAW;MAAEE;IAAK,CAAC,CAAC,CAAC,CAC7E;EACH;EAIA;EACA;EACA;EACA;EACA;EACA;EAEAK,cAAc,CAACC,EAAU;IACvB,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,iBAAiB,EAAED,EAAE,CAAC,CAAC;EAC/C;EAEAE,cAAc,CAACF,EAAU;IACvB,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,iBAAiB,EAAED,EAAE,CAAC,CAAC;EAC/C;EAEAG,cAAc,CAACH,EAAU;IACvB,IAAI,CAACnB,eAAe,CAACsB,cAAc,CAACH,EAAE,CAAC,CAACI,SAAS,CAACC,IAAI,IAAG;MACvDf,OAAO,CAACC,GAAG,CAACc,IAAI,CAAC;MACjB;IACF,CAAC,CAAC;EACJ;CACD;;AA9DY1B,qBAAqB,eALjCN,SAAS,CAAC;EACTiC,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,GACW7B,qBAAqB,CA8DjC;SA9DYA,qBAAqB","names":["Component","BehaviorSubject","map","of","startWith","catchError","EmployeeListComponent","constructor","employeeService","router","ngOnInit","employeesState$","employees$","pipe","response","responseSubject","next","console","log","appState","appData","error","gotToPage","name","pageNumber","value","updateEmployee","id","navigate","detailEmployee","deleteEmployee","subscribe","data","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Code\\Projects\\EmployeeManager\\Employee_Manager_Angular\\src\\app\\employee\\employee-list\\employee-list.component.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Employee } from '../employee';\nimport { EmployeeService } from '../employee.service';\nimport { Router } from '@angular/router';\nimport { Page } from 'src/app/interface/page';\nimport { ApiResponse } from '../../interface/ApiResponse';\nimport { BehaviorSubject, Observable, map, of, startWith } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit{\n  employees: Employee[] = [];\n  page: Page = {} as Page;\n  apiResponse: ApiResponse<Page> = {} as ApiResponse<Page>;\n  responseSubject = new BehaviorSubject<ApiResponse<Page>>(null);\n\n  constructor(private employeeService: EmployeeService,\n    private router: Router){}\n\n  employeesState$: Observable<{appState: string, appData?: ApiResponse<Page>, error?: HttpErrorResponse}>;\n\n  ngOnInit(): void{\n    // this.getEmployees();\n    this.employeesState$ = this.employeeService.employees$().pipe(\n      map((response: ApiResponse<Page>) => {\n\n        //giữ 1 copy response\n        this.responseSubject.next(response);\n        console.log((response));\n        return ({ appState: 'APP_LOAD', appData: response });\n      }\n      ),\n      startWith({appState: 'APP_LOADING'}),\n      catchError((error: HttpErrorResponse) => of({appState: 'APP_ERROR', error}))\n    )\n  }\n  gotToPage(name?: string, pageNumber?: number): void{\n    this.employeesState$ = this.employeeService.employees$(pageNumber).pipe(\n      map((response: ApiResponse<Page>) => {\n        this.responseSubject.next(response);\n        console.log((response));\n        return ({ appState: 'APP_LOADED', appData: response });\n      }\n      ),\n      startWith({appState: 'APP_LOADED', appData: this.responseSubject.value}),\n      catchError((error: HttpErrorResponse) => of({appState: 'APP_ERROR', error}))\n    )\n  }\n\n\n\n  // private getEmployees(){\n  //   this.employeeService.getEmployeesList(0,10).subscribe((data) => {\n  //     console.log(data);\n  //     this.apiResponse = data;\n  //   });\n  // }\n\n  updateEmployee(id: number){\n    this.router.navigate(['update-employee', id]);\n  }\n\n  detailEmployee(id: number){\n    this.router.navigate(['detail-employee', id]);\n  }\n\n  deleteEmployee(id: number){\n    this.employeeService.deleteEmployee(id).subscribe(data => {\n      console.log(data)\n      // this.getEmployees();\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}