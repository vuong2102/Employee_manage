{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../account-bank.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction AccountBackComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function AccountBackComponent_tr_14_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const employee_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.updateAccountBank(employee_r1.id));\n    });\n    i0.ɵɵtext(11, \" Update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function AccountBackComponent_tr_14_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const employee_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteAccountBank(employee_r1.id));\n    });\n    i0.ɵɵtext(13, \" Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const employee_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", employee_r1.accountNumber, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", employee_r1.bankName, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", employee_r1.branchLocation, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", employee_r1.cardType, \" \");\n  }\n}\nexport class AccountBackComponent {\n  constructor(accountBankservice, router) {\n    this.accountBankservice = accountBankservice;\n    this.router = router;\n    this.accountBank = [];\n  }\n  ngOnInit() {\n    this.getAccountBanks;\n  }\n  getAccountBanks() {\n    this.accountBankservice.getAccountBanksList().subscribe(data => {\n      this.accountBank = data;\n    });\n  }\n  updateAccountBank(id) {\n    this.router.navigate(['update-account-bank', id]);\n  }\n  detailAccountBank(id) {\n    this.router.navigate(['detail-account-bank', id]);\n  }\n  deleteAccountBank(id) {\n    this.accountBankservice.deleteAccountBank(id).subscribe(data => {\n      console.log(data);\n      // this.getaccountBanks();\n    });\n  }\n}\n\nAccountBackComponent.ɵfac = function AccountBackComponent_Factory(t) {\n  return new (t || AccountBackComponent)(i0.ɵɵdirectiveInject(i1.AccountBankService), i0.ɵɵdirectiveInject(i2.Router));\n};\nAccountBackComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AccountBackComponent,\n  selectors: [[\"app-account-back\"]],\n  decls: 15,\n  vars: 1,\n  consts: [[1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-info\", 3, \"click\"], [1, \"btn\", \"btn-danger\", 2, \"margin-left\", \"10px\", 3, \"click\"]],\n  template: function AccountBackComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \" Account Bank List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\", 0)(3, \"thead\")(4, \"tr\")(5, \"th\");\n      i0.ɵɵtext(6, \" Account Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\");\n      i0.ɵɵtext(8, \" Bank Name \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \" Branch Location\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \" Card Type\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"tbody\");\n      i0.ɵɵtemplate(14, AccountBackComponent_tr_14_Template, 14, 4, \"tr\", 1);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngForOf\", ctx.accountBank);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAWQA,0BAA4C;IACnCA,YAA6B;IAAAA,iBAAK;IACvCA,0BAAI;IAACA,YAAwB;IAAAA,iBAAK;IAClCA,0BAAI;IAACA,YAA8B;IAAAA,iBAAK;IACxCA,0BAAI;IAACA,YAAwB;IAAAA,iBAAK;IAClCA,0BAAI;IACQA;MAAA;MAAA;MAAA;MAAA,OAAWA,uDAA8B;IAAA,EAAC;IAAyBA,wBAAM;IAAAA,iBAAS;IAC1FA,kCAAsG;IAA9FA;MAAA;MAAA;MAAA;MAAA,OAAWA,uDAA8B;IAAA,EAAC;IAAqDA,wBAAM;IAAAA,iBAAS;;;;IANrHA,eAA6B;IAA7BA,0DAA6B;IAC7BA,eAAwB;IAAxBA,qDAAwB;IACxBA,eAA8B;IAA9BA,2DAA8B;IAC9BA,eAAwB;IAAxBA,qDAAwB;;;ACLzC,OAAM,MAAOC,oBAAoB;EAG/BC,YAAoBC,kBAAsC,EAChDC,MAAc;IADJ,uBAAkB,GAAlBD,kBAAkB;IAC5B,WAAM,GAANC,MAAM;IAHhB,gBAAW,GAAkB,EAAE;EAGL;EAE1BC,QAAQ;IACN,IAAI,CAACC,eAAe;EACtB;EAEUA,eAAe;IACrB,IAAI,CAACH,kBAAkB,CAACI,mBAAmB,EAAE,CAACC,SAAS,CAAEC,IAAI,IAAI;MAC/D,IAAI,CAACC,WAAW,GAAGD,IAAI;IACzB,CAAC,CAAC;EACJ;EAEAE,iBAAiB,CAACC,EAAU;IAC1B,IAAI,CAACR,MAAM,CAACS,QAAQ,CAAC,CAAC,qBAAqB,EAAED,EAAE,CAAC,CAAC;EACnD;EAEAE,iBAAiB,CAACF,EAAU;IAC1B,IAAI,CAACR,MAAM,CAACS,QAAQ,CAAC,CAAC,qBAAqB,EAAED,EAAE,CAAC,CAAC;EACnD;EAEAG,iBAAiB,CAACH,EAAU;IAC1B,IAAI,CAACT,kBAAkB,CAACY,iBAAiB,CAACH,EAAE,CAAC,CAACJ,SAAS,CAACC,IAAI,IAAG;MAC7DO,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;MACjB;IACF,CAAC,CAAC;EACJ;;;AA7BSR,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDVjCtB,0BAAI;MAACA,kCAAiB;MAAAA,iBAAK;MAC3BA,gCAAqC;MAGpBA,+BAAc;MAAAA,iBAAK;MACxBA,0BAAI;MAACA,2BAAU;MAAAA,iBAAK;MACpBA,0BAAI;MAACA,iCAAe;MAAAA,iBAAK;MACzBA,2BAAI;MAACA,2BAAS;MAAAA,iBAAK;MAG3BA,8BAAO;MACHA,sEASK;MACTA,iBAAQ;;;MAVuBA,gBAAc;MAAdA,yCAAc","names":["i0","AccountBackComponent","constructor","accountBankservice","router","ngOnInit","getAccountBanks","getAccountBanksList","subscribe","data","accountBank","updateAccountBank","id","navigate","detailAccountBank","deleteAccountBank","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\Code\\Projects\\EmployeeManager\\Employee_Manager_Angular\\src\\app\\Account-bank\\account-back\\account-back.component.html","D:\\Code\\Projects\\EmployeeManager\\Employee_Manager_Angular\\src\\app\\Account-bank\\account-back\\account-back.component.ts"],"sourcesContent":["<h2> Account Bank List</h2>\n<table class = \"table table-striped\">\n    <thead>\n        <tr>\n            <th> Account Number</th>\n            <th> Bank Name </th>\n            <th> Branch Location</th>\n            <th> Card Type</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor = \"let employee of accountBank\" >\n            <td> {{ employee.accountNumber }} </td>\n            <td> {{ employee.bankName }} </td>\n            <td> {{ employee.branchLocation }} </td>\n            <td> {{ employee.cardType }} </td>\n            <td>\n                <button (click) = \"updateAccountBank(employee.id)\" class = \"btn btn-info\"> Update</button>\n                <button (click) = \"deleteAccountBank(employee.id)\" class = \"btn btn-danger\" style=\"margin-left: 10px\"> Delete</button>\n            </td>\n        </tr>\n    </tbody>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AccountBankService } from '../account-bank.service';\nimport { AccountBank } from 'src/app/interface/account-bank';\n\n@Component({\n  selector: 'app-account-back',\n  templateUrl: './account-back.component.html',\n  styleUrls: ['./account-back.component.css']\n})\nexport class AccountBackComponent implements OnInit{\n  accountBank: AccountBank[] = [];\n\n  constructor(private accountBankservice: AccountBankService,\n    private router: Router){}\n\n  ngOnInit(): void {\n    this.getAccountBanks;\n  }\n\n    private getAccountBanks(){\n      this.accountBankservice.getAccountBanksList().subscribe((data) => {\n        this.accountBank = data;\n      });\n    }\n\n    updateAccountBank(id: number){\n      this.router.navigate(['update-account-bank', id]);\n    }\n\n    detailAccountBank(id: number){\n      this.router.navigate(['detail-account-bank', id]);\n    }\n\n    deleteAccountBank(id: number){\n      this.accountBankservice.deleteAccountBank(id).subscribe(data => {\n        console.log(data)\n        // this.getaccountBanks();\n      })\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}