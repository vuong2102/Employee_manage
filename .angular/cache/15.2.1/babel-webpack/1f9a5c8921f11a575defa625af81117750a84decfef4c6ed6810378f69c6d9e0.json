{"ast":null,"code":"import { BehaviorSubject, catchError, map, of, startWith } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../Service/employee.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../Service/user-auth.service\";\nexport class EmployeeListComponent {\n  constructor(employeeService, router, userAuthService) {\n    this.employeeService = employeeService;\n    this.router = router;\n    this.userAuthService = userAuthService;\n    this.employees = [];\n    this.responseSubject = new BehaviorSubject(null);\n    this.currentPageSubject = new BehaviorSubject(0);\n    this.currentPage$ = this.currentPageSubject.asObservable();\n  }\n  ngOnInit() {\n    this.employeesState$ = this.employeeService.employees$().pipe(map(response => {\n      this.responseSubject.next(response);\n      this.currentPageSubject.next(response.data.page.number);\n      console.log(response);\n      return {\n        appState: 'APP_LOADED',\n        appData: response\n      };\n    }), startWith({\n      appState: 'APP_LOADING'\n    }), catchError(error => {\n      return of({\n        appState: 'APP_ERROR',\n        error\n      });\n    }));\n  }\n  gotToPage(name, pageNumber = 0) {\n    this.employeesState$ = this.employeeService.employees$(name, pageNumber).pipe(map(response => {\n      this.responseSubject.next(response);\n      this.currentPageSubject.next(pageNumber);\n      console.log(response);\n      return {\n        appState: 'APP_LOADED',\n        appData: response\n      };\n    }), startWith({\n      appState: 'APP_LOADED',\n      appData: this.responseSubject.value\n    }), catchError(error => {\n      return of({\n        appState: 'APP_ERROR',\n        error\n      });\n    }));\n  }\n  goToNextOrPreviousPage(direction, name) {\n    this.gotToPage(name, direction === 'forward' ? this.currentPageSubject.value + 1 : this.currentPageSubject.value - 1);\n  }\n  // private getEmployees(){\n  //   this.employeeService.getEmployeesList().subscribe((data) => {\n  //     this.employees = data;\n  //   });\n  // }\n  updateEmployee(id) {\n    if (this.userAuthService.getRoles() === 'admin') {\n      this.router.navigate(['update-employee', id]);\n    } else alert(\"you need to contact the admin to do that!\");\n  }\n  detailEmployee(id) {\n    if (this.userAuthService.getRoles() === 'admin' || this.userAuthService.getRoles() === 'user') {\n      this.router.navigate(['detail-employee', id]);\n    } else alert(\"You need to login\");\n  }\n  deleteEmployee(id) {\n    if (this.userAuthService.getRoles() === 'admin') {\n      this.employeeService.deleteEmployee(id).subscribe(data => {\n        console.log(data);\n        this.router.navigate(['employees']);\n        alert(\"Delete SuccessFully\");\n        // this.getEmployees();\n      });\n    } else alert(\"you need to contact the admin to do that!\");\n  }\n  addFunction() {\n    if (this.userAuthService.getRoles() === 'admin') {\n      this.router.navigate(['/create-employee']);\n    } else {\n      alert(\"you need to contact the admin to do that!\");\n    }\n  }\n}\nEmployeeListComponent.ɵfac = function EmployeeListComponent_Factory(t) {\n  return new (t || EmployeeListComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UserAuthService));\n};\nEmployeeListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EmployeeListComponent,\n  selectors: [[\"app-employee-list\"]],\n  decls: 8,\n  vars: 0,\n  consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"http-equiv\", \"X-UA-Compatible\", \"content\", \"IE=edge\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"]],\n  template: function EmployeeListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2)(4, \"meta\", 3);\n      i0.ɵɵelementStart(5, \"title\");\n      i0.ɵɵtext(6, \"Document\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(7, \"body\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["BehaviorSubject","catchError","map","of","startWith","EmployeeListComponent","constructor","employeeService","router","userAuthService","currentPageSubject","asObservable","ngOnInit","employeesState$","employees$","pipe","response","responseSubject","next","data","page","number","console","log","appState","appData","error","gotToPage","name","pageNumber","value","goToNextOrPreviousPage","direction","updateEmployee","id","getRoles","navigate","alert","detailEmployee","deleteEmployee","subscribe","addFunction","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["D:\\Code\\Projects\\EmployeeManager\\Employee_Manager_Angular\\src\\app\\Employee\\employee-list\\employee-list.component.ts","D:\\Code\\Projects\\EmployeeManager\\Employee_Manager_Angular\\src\\app\\Employee\\employee-list\\employee-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Employee } from '../../interface/employee';\r\nimport { EmployeeService } from '../../Service/employee.service';\r\nimport { Router } from '@angular/router';\r\nimport { UpdateEmployeeComponent } from '../update-employee/update-employee.component';\r\nimport { BehaviorSubject, Observable, catchError, map, of, startWith } from 'rxjs';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Page } from '../../interface/page';\r\nimport { ApiResponse } from '../../interface/api-response';\r\nimport { UserAuthService } from '../../Service/user-auth.service';\r\n\r\n@Component({\r\n  selector: 'app-employee-list',\r\n  templateUrl: './employee-list.component.html',\r\n  styleUrls: ['./employee-list.component.css']\r\n})\r\nexport class EmployeeListComponent implements OnInit{\r\n\r\n  employees: Employee[] = [];\r\n\r\n  constructor(private employeeService: EmployeeService,\r\n    private router: Router,\r\n    private userAuthService: UserAuthService){}\r\n\r\n  employeesState$: Observable<{ appState: string, appData?: ApiResponse<Page>, error?: HttpErrorResponse }>;\r\n  responseSubject = new BehaviorSubject<ApiResponse<Page>>(null);\r\n  private currentPageSubject = new BehaviorSubject<number>(0);\r\n  currentPage$ = this.currentPageSubject.asObservable();\r\n\r\n  ngOnInit(): void {\r\n    this.employeesState$ = this.employeeService.employees$().pipe(\r\n      map((response: ApiResponse<Page>) => {\r\n        this.responseSubject.next(response);\r\n        this.currentPageSubject.next(response.data.page.number);\r\n        console.log(response);\r\n        return ({ appState: 'APP_LOADED', appData: response });\r\n      }),\r\n      startWith({ appState: 'APP_LOADING' }),\r\n      catchError((error: HttpErrorResponse) =>{\r\n        return of({ appState: 'APP_ERROR', error })}\r\n        )\r\n    )\r\n  }\r\n\r\n  gotToPage(name?: string, pageNumber: number = 0): void {\r\n    this.employeesState$ = this.employeeService.employees$(name, pageNumber).pipe(\r\n      map((response: ApiResponse<Page>) => {\r\n        this.responseSubject.next(response);\r\n        this.currentPageSubject.next(pageNumber);\r\n        console.log(response);\r\n        return ({ appState: 'APP_LOADED', appData: response });\r\n      }),\r\n      startWith({ appState: 'APP_LOADED', appData: this.responseSubject.value }),\r\n      catchError((error: HttpErrorResponse) =>{\r\n        return of({ appState: 'APP_ERROR', error })}\r\n        )\r\n    )\r\n  }\r\n\r\n  goToNextOrPreviousPage(direction?: string, name?: string): void {\r\n    this.gotToPage(name, direction === 'forward' ? this.currentPageSubject.value + 1 : this.currentPageSubject.value - 1);\r\n  }\r\n\r\n  // private getEmployees(){\r\n  //   this.employeeService.getEmployeesList().subscribe((data) => {\r\n  //     this.employees = data;\r\n  //   });\r\n  // }\r\n\r\n  updateEmployee(id: number){\r\n    if(this.userAuthService.getRoles() === 'admin'){\r\n      this.router.navigate(['update-employee', id]);\r\n    }\r\n    else alert(\"you need to contact the admin to do that!\");\r\n  }\r\n\r\n  detailEmployee(id: number){\r\n    if(this.userAuthService.getRoles() === 'admin' || this.userAuthService.getRoles() === 'user'){\r\n      this.router.navigate(['detail-employee', id]);\r\n    }\r\n    else alert(\"You need to login\");\r\n  }\r\n\r\n  deleteEmployee(id: number){\r\n    if(this.userAuthService.getRoles() === 'admin'){\r\n      this.employeeService.deleteEmployee(id).subscribe(data => {\r\n      console.log(data)\r\n      this.router.navigate(['employees']);\r\n      alert(\"Delete SuccessFully\");\r\n      // this.getEmployees();\r\n      })\r\n    }\r\n    else alert(\"you need to contact the admin to do that!\");\r\n  }\r\n  addFunction(){\r\n    if(this.userAuthService.getRoles() === 'admin'){\r\n      this.router.navigate(['/create-employee']);\r\n    }\r\n    else{\r\n      alert(\"you need to contact the admin to do that!\");\r\n    }\r\n  }\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <title>Document</title>\r\n</head>\r\n<body>\r\n  <!-- <div>\r\n    <section>\r\n    <tr class=\"navigation\">\r\n      <th>\r\n        <h2>Employee List</h2>\r\n      </th>\r\n      <th>\r\n        <form #searchForm=\"ngForm\" (ngSubmit)=\"gotToPage(searchForm.value.name)\" class=\"d-flex justify-content-center\" role=\"search\">\r\n          <input type=\"search\" name=\"name\" ngModel class=\"form-control me-2 justify-content-center\" placeholder=\"Search\" aria-label=\"Search\">\r\n          <button class=\"btn btn-success\" type=\"submit\">Search</button>\r\n        </form>\r\n      </th>\r\n    </tr>\r\n    <ng-container *ngIf=\"(employeesState$ | async) as state\" [ngSwitch]=\"state.appState\">\r\n      <div class=\"row\">\r\n          <div class=\"col-md-12 mt-3\">\r\n            <ng-container *ngSwitchCase=\"'APP_ERROR'\">{{ state.error | json }}</ng-container>\r\n            <ng-container *ngSwitchCase=\"'APP_LOADING'\">\r\n              <div class=\"d-flex justify-content-center mt-4\">\r\n                <div class=\"spinner-border\" role=\"status\">\r\n                  <span class=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            </ng-container>\r\n            <div>\r\n              <ng-container *ngSwitchCase=\"'APP_LOADED'\">\r\n                <div>\r\n                  <table class=\"table table-striped\">\r\n                    <tr class = \"headerr\">\r\n                      <th>FullName</th>\r\n                      <th>Address</th>\r\n                      <th>Email</th>\r\n                      <th>Phone Number</th>\r\n                      <th>Actions</th>\r\n                    </tr>\r\n                  <tbody>\r\n                    <tr *ngFor=\"let employee of state.appData.data.page.content; let i = index;\">\r\n                        <th>{{employee.username}}</th>\r\n                        <th>{{employee.address}}</th>\r\n                        <th>{{employee.email}}</th>\r\n                        <th>{{employee.phoneNumber}}</th>\r\n                        <th>\r\n                          <button (click)=\"updateEmployee(employee.id)\" class = \"btn btn-info\">Update</button>\r\n                          <button (click)=\"deleteEmployee(employee.id)\" class = \"btn btn-danger\" style=\"margin-left: 10px\">Delete</button>\r\n                          <button (click)=\"detailEmployee(employee.id)\" class = \"btn btn-info\" style=\"margin-left: 10px\">Account Bank</button>\r\n                        </th>\r\n                    </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <div>\r\n                  <div *ngIf=\"state.appData.data.page.content.length < 1\" class=\"alert alert-secondary\" role=\"alert\">\r\n                  No employees found\r\n                </div>\r\n                <nav *ngIf=\"state.appData.data.page.content.length > 0\" aria-label=\"Page navigation example\">\r\n                  <ul class=\"pagination justify-content-end\">\r\n                    <button class = \"add-button justify-content-start\">\r\n                      <a (click)=\"addFunction()\" class = \"add-customer\">Add Employee</a>\r\n                    </button>\r\n                    <ul class=\"pagination justify-content-end\">\r\n                      <li class=\"page-item pointer \" [ngClass]=\"0 == (currentPage$ | async) ? ' disabled' : ''\">\r\n                      <a (click)=\"goToNextOrPreviousPage('backward', '')\" class=\"page-link previous\" aria-label=\"Previous\">\r\n                        <span aria-hidden=\"true\">&laquo; Previous</span>\r\n                      </a>\r\n\r\n                    </li>\r\n                    <li *ngFor=\"let pageNumber of [].constructor(state.appData.data.page.totalPages); let i = index;\"\r\n                        class=\"page-item pointer\" [ngClass]=\"i == (currentPage$ | async) ? ' active' : ''\">\r\n                      <a (click)=\"gotToPage('', i)\" class=\"page-link\">\r\n                        {{ i + 1 }}\r\n                      </a>\r\n                    </li>\r\n                    <li class=\"page-item pointer\" [ngClass]=\"(state.appData.data.page.totalPages - 1) == (currentPage$ | async) ? ' disabled' : ''\">\r\n                      <a (click)=\"goToNextOrPreviousPage('forward', '')\" class=\"page-link\" aria-label=\"Next\">\r\n                        <span aria-hidden=\"true\">Next &raquo;</span>\r\n                      </a>\r\n                    </li>\r\n                    </ul>\r\n\r\n                  </ul>\r\n                </nav>\r\n                </div>\r\n\r\n            </ng-container>\r\n            </div>\r\n\r\n          </div>\r\n      </div>\r\n\r\n    </ng-container>\r\n    </section>\r\n  </div> -->\r\n</body>\r\n</html>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}