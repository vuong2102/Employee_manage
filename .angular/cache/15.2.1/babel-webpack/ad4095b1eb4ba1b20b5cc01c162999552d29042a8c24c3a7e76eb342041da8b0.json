{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class EmployeeListComponent {\n  ngOnInit() {\n    throw new Error('Method not implemented.');\n  }\n}\nEmployeeListComponent.ɵfac = function EmployeeListComponent_Factory(t) {\n  return new (t || EmployeeListComponent)();\n};\nEmployeeListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EmployeeListComponent,\n  selectors: [[\"app-employee-list\"]],\n  decls: 0,\n  vars: 0,\n  template: function EmployeeListComponent_Template(rf, ctx) {},\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AAgBA,OAAM,MAAOA,qBAAqB;EAChCC,QAAQ;IACN,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;;AAHWF,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAG;EAAAC;EAAAC;EAAAC;EAAAC;AAAA","names":["EmployeeListComponent","ngOnInit","Error","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["D:\\Code\\Projects\\EmployeeManager\\Employee_Manager_Angular\\src\\app\\employee\\employee-list\\employee-list.component.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Employee } from '../employee';\nimport { EmployeeService } from '../employee.service';\nimport { Router } from '@angular/router';\nimport { Page } from 'src/app/interface/page';\nimport { ApiResponse } from '../../interface/ApiResponse';\nimport { BehaviorSubject, Observable, map, of, startWith } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit{\n  ngOnInit(): void {\n    throw new Error('Method not implemented.');\n  }\n  // employees: Employee[] = [];\n  // page: Page = {} as Page;\n  // apiResponse: ApiResponse<Page> = {} as ApiResponse<Page>;\n  // responseSubject = new BehaviorSubject<ApiResponse<Page>>(null);\n\n  // private currentPageSubject = new BehaviorSubject<number>(0);;\n  // currentPage$ = this.currentPageSubject.asObservable();\n\n  // constructor(private employeeService: EmployeeService,\n  //   private router: Router){}\n\n  // employeesState$: Observable<{appState: string, appData?: ApiResponse<Page>, error?: HttpErrorResponse}>;\n\n  // ngOnInit(): void{\n  //   // this.getEmployees();\n  //   this.employeesState$ = this.employeeService.employees$().pipe(\n  //     map((response: ApiResponse<Page>) => {\n\n  //       //giữ 1 copy response\n  //       this.responseSubject.next(response);\n\n  //       this.currentPageSubject.next(response.data.page.number)\n  //       console.log((response));\n  //       return ({ appState: 'APP_LOAD', appData: response });\n  //     }\n  //     ),\n  //     startWith({appState: 'APP_LOADING'}),\n  //     catchError((error: HttpErrorResponse) => of({appState: 'APP_ERROR', error}))\n  //   )\n  // }\n  // gotToPage(pageNumber?: number): void{\n  //   this.employeesState$ = this.employeeService.employees$(pageNumber).pipe(\n  //     map((response: ApiResponse<Page>) => {\n  //       this.responseSubject.next(response);\n  //       this.currentPageSubject.next(pageNumber)\n\n  //       console.log((response));\n  //       return ({ appState: 'APP_LOADED', appData: response });\n  //     }\n  //     ),\n  //     startWith({appState: 'APP_LOADED', appData: this.responseSubject.value}),\n  //     catchError((error: HttpErrorResponse) => of({appState: 'APP_ERROR', error}))\n  //   )\n  // }\n  // goToNextOrPreviousPage(direction?: string): void{\n  //   this.gotToPage(direction === 'forward' ? this.currentPageSubject.value + 1 : this.currentPageSubject.value - 1);\n  // }\n\n\n\n  // // private getEmployees(){\n  // //   this.employeeService.getEmployeesList(0,10).subscribe((data) => {\n  // //     console.log(data);\n  // //     this.apiResponse = data;\n  // //   });\n  // // }\n\n  // updateEmployee(id: number){\n  //   this.router.navigate(['update-employee', id]);\n  // }\n\n  // detailEmployee(id: number){\n  //   this.router.navigate(['detail-employee', id]);\n  // }\n\n  // deleteEmployee(id: number){\n  //   this.employeeService.deleteEmployee(id).subscribe(data => {\n  //     console.log(data)\n  //     // this.getEmployees();\n  //   })\n  // }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}