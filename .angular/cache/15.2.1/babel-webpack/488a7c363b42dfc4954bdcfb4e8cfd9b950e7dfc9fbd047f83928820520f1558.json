{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet LoginComponent = class LoginComponent {\n  constructor(formBuild, tokenStorageService, authService, router, route) {\n    this.formBuild = formBuild;\n    this.tokenStorageService = tokenStorageService;\n    this.authService = authService;\n    this.router = router;\n    this.route = route;\n    this.errorMessage = '';\n    this.roles = [];\n  }\n  onSubmit() {\n    this.authService.login(this.formGroup.value).subscribe(data => {\n      if (this.formGroup.value.remember_me) {\n        this.tokenStorageService.saveTokenLocal(data.accessToken);\n        this.tokenStorageService.saveUserLocal(data);\n      } else {\n        this.tokenStorageService.saveTokenSession(data.accessToken);\n        this.tokenStorageService.saveUserLocal(data);\n      }\n      this.authService.isLoggedIn = true;\n      this.username = this.tokenStorageService.getUser().username;\n      this.roles = this.tokenStorageService.getUser().roles;\n      this.formGroup.reset();\n      this.router.navigateByUrl(this.returnUrl);\n      this.shareService.sendClickEvent();\n    }, err => {\n      this.errorMessage = err.error.message;\n      this.authService.isLoggedIn = false;\n      this.toastr.error(\"Sai tên đăng nhập hoặc mật khẩu hoặc tài khoản chưa được kích hoạt\", \"Đăng nhập thất bại: \", {\n        timeOut: 3000,\n        extendedTimeOut: 1500\n      });\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAUlC,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAQzBC,YAAoBC,SAAsB,EAChCC,mBAAwC,EACxCC,WAAwB,EACxBC,MAAc,EACdC,KAAqB;IAJX,cAAS,GAATJ,SAAS;IACnB,wBAAmB,GAAnBC,mBAAmB;IACnB,gBAAW,GAAXC,WAAW;IACX,WAAM,GAANC,MAAM;IACN,UAAK,GAALC,KAAK;IATf,iBAAY,GAAG,EAAE;IACjB,UAAK,GAAa,EAAE;EAStB;EACEC,QAAQ;IACN,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC,IAAI,CAACC,SAAS,CAACC,KAAK,CAAC,CAACC,SAAS,CACpDC,IAAI,IAAG;MACL,IAAI,IAAI,CAACH,SAAS,CAACC,KAAK,CAACG,WAAW,EAAE;QACpC,IAAI,CAACV,mBAAmB,CAACW,cAAc,CAACF,IAAI,CAACG,WAAW,CAAC;QACzD,IAAI,CAACZ,mBAAmB,CAACa,aAAa,CAACJ,IAAI,CAAC;OAC7C,MAAM;QACL,IAAI,CAACT,mBAAmB,CAACc,gBAAgB,CAACL,IAAI,CAACG,WAAW,CAAC;QAC3D,IAAI,CAACZ,mBAAmB,CAACa,aAAa,CAACJ,IAAI,CAAC;;MAG9C,IAAI,CAACR,WAAW,CAACc,UAAU,GAAG,IAAI;MAClC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAAChB,mBAAmB,CAACiB,OAAO,EAAE,CAACD,QAAQ;MAC3D,IAAI,CAACE,KAAK,GAAG,IAAI,CAAClB,mBAAmB,CAACiB,OAAO,EAAE,CAACC,KAAK;MACrD,IAAI,CAACZ,SAAS,CAACa,KAAK,EAAE;MACtB,IAAI,CAACjB,MAAM,CAACkB,aAAa,CAAC,IAAI,CAACC,SAAS,CAAC;MACzC,IAAI,CAACC,YAAY,CAACC,cAAc,EAAE;IAEpC,CAAC,EACDC,GAAG,IAAG;MACJ,IAAI,CAACC,YAAY,GAAGD,GAAG,CAACE,KAAK,CAACC,OAAO;MACrC,IAAI,CAAC1B,WAAW,CAACc,UAAU,GAAG,KAAK;MACnC,IAAI,CAACa,MAAM,CAACF,KAAK,CAAC,oEAAoE,EAAE,sBAAsB,EAAE;QAC9GG,OAAO,EAAE,IAAI;QACbC,eAAe,EAAE;OAClB,CAAC;IAEJ,CAAC;EACL;CACD;AA3CYjC,cAAc,eAL1BD,SAAS,CAAC;EACTmC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACWpC,cAAc,CA2C1B;SA3CYA,cAAc","names":["Component","LoginComponent","constructor","formBuild","tokenStorageService","authService","router","route","onSubmit","login","formGroup","value","subscribe","data","remember_me","saveTokenLocal","accessToken","saveUserLocal","saveTokenSession","isLoggedIn","username","getUser","roles","reset","navigateByUrl","returnUrl","shareService","sendClickEvent","err","errorMessage","error","message","toastr","timeOut","extendedTimeOut","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Code\\Projects\\EmployeeManager\\Employee_Manager_Angular\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  formGroup: FormGroup;\n  username: string | undefined;\n  errorMessage = '';\n  roles: string[] = [];\n  returnUrl: string;\n  toastr: any;\n\n  constructor(private formBuild: FormBuilder,\n    private tokenStorageService: TokenStorageService,\n    private authService: AuthService,\n    private router: Router,\n    private route: ActivatedRoute) {\n}\n  onSubmit(){\n    this.authService.login(this.formGroup.value).subscribe(\n      data => {\n        if (this.formGroup.value.remember_me) {\n          this.tokenStorageService.saveTokenLocal(data.accessToken);\n          this.tokenStorageService.saveUserLocal(data);\n        } else {\n          this.tokenStorageService.saveTokenSession(data.accessToken);\n          this.tokenStorageService.saveUserLocal(data);\n        }\n\n        this.authService.isLoggedIn = true;\n        this.username = this.tokenStorageService.getUser().username;\n        this.roles = this.tokenStorageService.getUser().roles;\n        this.formGroup.reset();\n        this.router.navigateByUrl(this.returnUrl);\n        this.shareService.sendClickEvent();\n\n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.authService.isLoggedIn = false;\n        this.toastr.error(\"Sai tên đăng nhập hoặc mật khẩu hoặc tài khoản chưa được kích hoạt\", \"Đăng nhập thất bại: \", {\n          timeOut: 3000,\n          extendedTimeOut: 1500\n        });\n\n      }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}