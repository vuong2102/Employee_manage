{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EmployeeService {\n  pageEmployee(request) {\n    const params = request;\n    return this.httpClient.get(`${this.baseURL}`, {\n      params\n    });\n  }\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseURL = \"http://localhost:8080/api/v1/employees\";\n    this.baseURL_save = \"http://localhost:8080/api/v1/create-employee\";\n    this.baseURL_delete = \"http://localhost:8080/api/v1/delete-employee\";\n    this.baseURL_update = \"http://localhost:8080/api/v1/update-employee\";\n  }\n  getEmployeesList(pageNo = 0, pageSize = 10) {\n    return this.httpClient.get(`${this.baseURL}?pageNo=${pageNo}&pageSize=${pageSize}`);\n  }\n  createEmployee(employee) {\n    return this.httpClient.post(`${this.baseURL_save}`, employee);\n  }\n  getEmployeeById(id) {\n    return this.httpClient.get(`${this.baseURL}/${id}`);\n  }\n  updateEmployee(id, employee) {\n    return this.httpClient.put(`${this.baseURL_update}/${id}`, employee);\n  }\n  detailEmployee(id) {\n    return this.httpClient.get(`${this.baseURL}/${id}`);\n  }\n  deleteEmployee(id) {\n    return this.httpClient.delete(`${this.baseURL_delete}/${id}`);\n  }\n}\nEmployeeService.ɵfac = function EmployeeService_Factory(t) {\n  return new (t || EmployeeService)(i0.ɵɵinject(i1.HttpClient));\n};\nEmployeeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EmployeeService,\n  factory: EmployeeService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAUA,OAAM,MAAOA,eAAe;EAO1BC,YAAY,CAACC,OAAY;IACvB,MAAMC,MAAM,GAAGD,OAAO;IACtB,OAAO,IAAI,CAACE,UAAU,CAACC,GAAG,CAAC,GAAG,IAAI,CAACC,OAAO,EAAE,EAAE;MAACH;IAAM,CAAC,CAAC;EACzD;EAEAI,YAAoBH,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAVtB,YAAO,GAAG,wCAAwC;IAClD,iBAAY,GAAG,8CAA8C;IAC7D,mBAAc,GAAG,8CAA8C;IAC/D,mBAAc,GAAG,8CAA8C;EAOzB;EAE9CI,gBAAgB,CAACC,SAAiB,CAAC,EAAEC,WAAmB,EAAE;IACxD,OAAO,IAAI,CAACN,UAAU,CAACC,GAAG,CAAa,GAAG,IAAI,CAACC,OAAO,WAAWG,MAAM,aAAaC,QAAQ,EAAE,CAAC;EACjG;EAEAC,cAAc,CAACC,QAAkB;IAC/B,OAAO,IAAI,CAACR,UAAU,CAACS,IAAI,CAAC,GAAG,IAAI,CAACC,YAAY,EAAE,EAAEF,QAAQ,CAAC;EAC/D;EAEAG,eAAe,CAACC,EAAU;IACxB,OAAO,IAAI,CAACZ,UAAU,CAACC,GAAG,CAAW,GAAG,IAAI,CAACC,OAAO,IAAIU,EAAE,EAAE,CAAC;EAC/D;EAEAC,cAAc,CAACD,EAAU,EAAEJ,QAAkB;IAC3C,OAAO,IAAI,CAACR,UAAU,CAACc,GAAG,CAAC,GAAG,IAAI,CAACC,cAAc,IAAIH,EAAE,EAAE,EAAEJ,QAAQ,CAAC;EACtE;EACAQ,cAAc,CAACJ,EAAU;IACvB,OAAO,IAAI,CAACZ,UAAU,CAACC,GAAG,CAAC,GAAG,IAAI,CAACC,OAAO,IAAIU,EAAE,EAAE,CAAC;EACrD;EACAK,cAAc,CAACL,EAAU;IACvB,OAAO,IAAI,CAACZ,UAAU,CAACkB,MAAM,CAAC,GAAG,IAAI,CAACC,cAAc,IAAIP,EAAE,EAAE,CAAC;EAC/D;;AAlCWhB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAwB,SAAfxB,eAAe;EAAAyB,YAFd;AAAM","names":["EmployeeService","pageEmployee","request","params","httpClient","get","baseURL","constructor","getEmployeesList","pageNo","pageSize","createEmployee","employee","post","baseURL_save","getEmployeeById","id","updateEmployee","put","baseURL_update","detailEmployee","deleteEmployee","delete","baseURL_delete","factory","providedIn"],"sourceRoot":"","sources":["D:\\Code\\Projects\\EmployeeManager\\Employee_Manager_Angular\\src\\app\\employee\\employee.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Employee } from './employee';\nimport { CreateEmployeeComponent } from './create-employee/create-employee.component';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  private baseURL = \"http://localhost:8080/api/v1/employees\";\n  private baseURL_save = \"http://localhost:8080/api/v1/create-employee\";\n  private baseURL_delete = \"http://localhost:8080/api/v1/delete-employee\";\n  private baseURL_update = \"http://localhost:8080/api/v1/update-employee\";\n\n  pageEmployee(request: any){\n    const params = request;\n    return this.httpClient.get(`${this.baseURL}`, {params});\n  }\n\n  constructor(private httpClient: HttpClient) { }\n\n  getEmployeesList(pageNo: number = 0, pageSize: number = 10): Observable<Employee[]>{\n    return this.httpClient.get<Employee[]>(`${this.baseURL}?pageNo=${pageNo}&pageSize=${pageSize}`);\n  }\n\n  createEmployee(employee: Employee): Observable<Object>{\n    return this.httpClient.post(`${this.baseURL_save}`, employee);\n  }\n\n  getEmployeeById(id: number): Observable<Employee>{\n    return this.httpClient.get<Employee>(`${this.baseURL}/${id}`);\n  }\n\n  updateEmployee(id: number, employee: Employee): Observable<Object>{\n    return this.httpClient.put(`${this.baseURL_update}/${id}`, employee);\n  }\n  detailEmployee(id: number){\n    return this.httpClient.get(`${this.baseURL}/${id}`);\n  }\n  deleteEmployee(id: number): Observable<Object>{\n    return this.httpClient.delete(`${this.baseURL_delete}/${id}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}